<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 点半九</title><link>https://www.dianbanjiu.com/post/</link><description>Recent content in Posts on 点半九</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>dianbanjiu@gmail.com</copyright><lastBuildDate>Fri, 19 Feb 2021 14:40:22 +0800</lastBuildDate><atom:link href="https://www.dianbanjiu.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>[译] Pixabay API</title><link>https://www.dianbanjiu.com/post/pixabay_api/</link><pubDate>Fri, 19 Feb 2021 14:40:22 +0800</pubDate><guid>https://www.dianbanjiu.com/post/pixabay_api/</guid><description>原文链接 欢迎来到 Pixabay API 文档，我们提供 RESTful 风格的接口，你可以通过这些接口搜索遵循 Pixabay 协议 的免费图像和视频。 当你使用了这些接口，需要在所有搜索结果中向</description></item><item><title>在 Github Pages 上部署 Hugo</title><link>https://www.dianbanjiu.com/post/%E5%9C%A8-github-pages-%E4%B8%8A%E9%83%A8%E7%BD%B2-hugo/</link><pubDate>Thu, 07 Jan 2021 00:33:09 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%9C%A8-github-pages-%E4%B8%8A%E9%83%A8%E7%BD%B2-hugo/</guid><description>其实在 github pages（以下简称 pages）上部署 hugo 的过程很简单，如何保证这些文件的迁移才是有点麻烦的事，不过最关键的问题其实在于你是否有足够的</description></item><item><title>Git 子模块管理</title><link>https://www.dianbanjiu.com/post/git-%E5%AD%90%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 04 Jan 2021 23:10:33 +0800</pubDate><guid>https://www.dianbanjiu.com/post/git-%E5%AD%90%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/</guid><description>子模块的创建 子模块的创建很简单，通过下面的命令就可以将 xxx 仓库注册到当前目录的 xxx 路径下。 1 $ git submodule add https://github.com/xxx/xxx.git ./xxx 子模块的更新 如果需要在 clone 项目时将子模块也</description></item><item><title>22 岁</title><link>https://www.dianbanjiu.com/post/%E5%B0%8F%E7%BB%93/</link><pubDate>Fri, 13 Nov 2020 23:30:39 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%B0%8F%E7%BB%93/</guid><description>在 22 岁生日即将结束之前，我写下了这句话。</description></item><item><title>Linux 安装后</title><link>https://www.dianbanjiu.com/post/linux-%E5%AE%89%E8%A3%85%E5%90%8E/</link><pubDate>Sat, 07 Nov 2020 13:31:23 +0800</pubDate><guid>https://www.dianbanjiu.com/post/linux-%E5%AE%89%E8%A3%85%E5%90%8E/</guid><description>之前因为各种奇奇怪怪的想法重装了 n 次电脑，不过因为一直都是在 Linux 的圈内，所以就记录一下在基本的安装完成之后，我都还干了些什么。 以下操作均基于 Manjaro</description></item><item><title>Vim 执行多条命令</title><link>https://www.dianbanjiu.com/post/vim-%E6%89%A7%E8%A1%8C%E5%A4%9A%E6%9D%A1%E5%91%BD%E4%BB%A4/</link><pubDate>Sun, 20 Sep 2020 22:37:02 +0800</pubDate><guid>https://www.dianbanjiu.com/post/vim-%E6%89%A7%E8%A1%8C%E5%A4%9A%E6%9D%A1%E5%91%BD%E4%BB%A4/</guid><description>最近又开始折腾自己的 vim 配置了，目前在 github 有 一份存档。为了方便还顺便也给这个 .vimrc 添加了一个安装的脚本。在写安装脚本的过程中遇到了一点小小的问题。 我</description></item><item><title>Postman 添加环境变量</title><link>https://www.dianbanjiu.com/post/pacman-%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link><pubDate>Fri, 14 Aug 2020 23:53:38 +0800</pubDate><guid>https://www.dianbanjiu.com/post/pacman-%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid><description>在使用 postman 进行后端接口测试的过程中，我常常会遇到除了登录接口外其他接口都需要 token 来验证的情况，遇到这种状况时，我经常会先转到登录接口，获取返回的</description></item><item><title> Bash, Cannot Set LC_CTYPE to Default, No Such File or Directory</title><link>https://www.dianbanjiu.com/post/-bash-cannot-set-lc_ctype-to-default-no-such-file-or-directory/</link><pubDate>Thu, 30 Jul 2020 22:38:35 +0800</pubDate><guid>https://www.dianbanjiu.com/post/-bash-cannot-set-lc_ctype-to-default-no-such-file-or-directory/</guid><description>最近使用 MacOS 的终端通过 ssh 连接 Linux 服务器的过程中，出现了一点问题，每次连接上之后，都会出现 -bash, cannot change locale, No such file or directory，整段错误代码没记住，</description></item><item><title>关于 Shell 脚本中空格的一点小坑</title><link>https://www.dianbanjiu.com/post/%E5%85%B3%E4%BA%8E-shell-%E8%84%9A%E6%9C%AC%E4%B8%AD%E7%A9%BA%E6%A0%BC%E7%9A%84%E4%B8%80%E7%82%B9%E5%B0%8F%E5%9D%91/</link><pubDate>Mon, 27 Jul 2020 00:23:54 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%85%B3%E4%BA%8E-shell-%E8%84%9A%E6%9C%AC%E4%B8%AD%E7%A9%BA%E6%A0%BC%E7%9A%84%E4%B8%80%E7%82%B9%E5%B0%8F%E5%9D%91/</guid><description>最近为了结合 gilab runner 自动化打包，写了不少的 shell 脚本，虽然都是比较简单的内容，但还是踩了不少的坑。最近的一个就是有关字符串的问题。 在很多场景下我们可</description></item><item><title>创建 Shell 脚本的帮助信息</title><link>https://www.dianbanjiu.com/post/%E5%88%9B%E5%BB%BA-shell-%E8%84%9A%E6%9C%AC%E7%9A%84%E5%B8%AE%E5%8A%A9%E4%BF%A1%E6%81%AF/</link><pubDate>Wed, 22 Jul 2020 23:28:50 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%88%9B%E5%BB%BA-shell-%E8%84%9A%E6%9C%AC%E7%9A%84%E5%B8%AE%E5%8A%A9%E4%BF%A1%E6%81%AF/</guid><description>原文链接 [英]：https://samizdat.dev/help-message-for-shell-scripts/ 有很多种方式可以获取</description></item><item><title>Git 提交多行 Commit 信息</title><link>https://www.dianbanjiu.com/post/git-%E6%8F%90%E4%BA%A4%E5%A4%9A%E8%A1%8C-commit-%E4%BF%A1%E6%81%AF/</link><pubDate>Sun, 19 Jul 2020 22:46:28 +0800</pubDate><guid>https://www.dianbanjiu.com/post/git-%E6%8F%90%E4%BA%A4%E5%A4%9A%E8%A1%8C-commit-%E4%BF%A1%E6%81%AF/</guid><description>git 提交信息 commit 在项目中追踪代码改动原因非常有用，特别是在团队合作中，一个简洁有效的 commit 可以帮助进行 merge 的人快速了解本次代码改动的必要性。为了保证提</description></item><item><title>使用这些插件让你的 Firefox 变得更好用</title><link>https://www.dianbanjiu.com/post/%E4%BD%BF%E7%94%A8%E8%BF%99%E4%BA%9B%E6%8F%92%E4%BB%B6%E8%AE%A9%E4%BD%A0%E7%9A%84-firefox-%E5%8F%98%E5%BE%97%E6%9B%B4%E5%A5%BD%E7%94%A8/</link><pubDate>Sun, 19 Jul 2020 12:30:35 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E4%BD%BF%E7%94%A8%E8%BF%99%E4%BA%9B%E6%8F%92%E4%BB%B6%E8%AE%A9%E4%BD%A0%E7%9A%84-firefox-%E5%8F%98%E5%BE%97%E6%9B%B4%E5%A5%BD%E7%94%A8/</guid><description>在 Linux 下我最喜欢用的浏览器一个是 chromium，另一个是 Firefox。但是因为各种网络原因，我最终还是把 Firefox 作为了我的主力浏览器。之所以喜欢</description></item><item><title>在Hugo博客中添加一个新的页面</title><link>https://www.dianbanjiu.com/post/%E5%9C%A8hugo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E9%A1%B5%E9%9D%A2/</link><pubDate>Thu, 11 Jun 2020 23:18:16 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E5%9C%A8hugo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E9%A1%B5%E9%9D%A2/</guid><description>这里说的页面不是指 hugo 利用 markdown 文件生成的页面，而是我们自己手动创建的 html 页面。 这个过程其实并不复杂，但是你需要有一些前端开发的经验，起码的 HTML</description></item><item><title>Linux 添加 Windows 字体库</title><link>https://www.dianbanjiu.com/post/linux-%E6%B7%BB%E5%8A%A0-windows-%E5%AD%97%E4%BD%93%E5%BA%93/</link><pubDate>Wed, 27 May 2020 23:02:52 +0800</pubDate><guid>https://www.dianbanjiu.com/post/linux-%E6%B7%BB%E5%8A%A0-windows-%E5%AD%97%E4%BD%93%E5%BA%93/</guid><description>如果你有尝试过在 Linux 下打开 Windows 制作的 word 文档，或者在 Windows 下打开 Linux 制作的 word 文档，你可能会惊喜的发现在两个平台下同一个 word 文件的样式截然不同，这对于一些对</description></item><item><title>使用 Vim 开始 Markdown 之旅</title><link>https://www.dianbanjiu.com/post/%E4%BD%BF%E7%94%A8-vim-%E5%BC%80%E5%A7%8B-markdown-%E4%B9%8B%E6%97%85/</link><pubDate>Sun, 03 May 2020 23:14:39 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E4%BD%BF%E7%94%A8-vim-%E5%BC%80%E5%A7%8B-markdown-%E4%B9%8B%E6%97%85/</guid><description>最近没事干，就想着给自己的 Vim 配置一下 markdown 环境，因为有现成的 markdown 预览插件，而且 vim 总体来说加载速度也快一些（说的就是比你 vscode 快🤪），说干就干。 我使用的</description></item><item><title>从零开始配置 Golang 开发环境</title><link>https://www.dianbanjiu.com/post/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE-golang-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 22 Apr 2020 22:50:05 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE-golang-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>安装 go 安装 go 的运行环境是第一步。 Windows/Linux/MacOS 用户都可以从 golang.org 下载安装包安装。 Windows Windows 用户双击下载好的安装包，然后就可以开始熟悉的下一步了。 Linux Linux 用户下载好之后</description></item><item><title>Golang 切片</title><link>https://www.dianbanjiu.com/post/golang-%E5%88%87%E7%89%87/</link><pubDate>Sun, 15 Mar 2020 11:59:22 +0800</pubDate><guid>https://www.dianbanjiu.com/post/golang-%E5%88%87%E7%89%87/</guid><description>最近在使用 golang 创建子集的时候，遇到了一些问题，下面是代码： 1 2 3 4 5 6 7 8 9 10 11 func Subsets(nums []int) [][]int { var sets = make([][]int, 0) var t = make([]int, 0) sets = append(sets, t) for i := 0; i &amp;lt; len(nums); i++ { for _, v</description></item><item><title>使用手机制作 Linux Live CD</title><link>https://www.dianbanjiu.com/post/%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E5%88%B6%E4%BD%9C-linux-live-cd/</link><pubDate>Thu, 02 Jan 2020 12:44:45 +0800</pubDate><guid>https://www.dianbanjiu.com/post/%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E5%88%B6%E4%BD%9C-linux-live-cd/</guid><description>在 2020 年的第一天，因为想试试黑苹果，所以就从网上下载了安装镜像，在自己的笔记本上尝试了一下，不过因为各种原因最后安装失败了，惟一的系统也在尝试</description></item><item><title>Android 手机投屏到 Linux 下</title><link>https://www.dianbanjiu.com/post/android-%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E5%88%B0-linux-%E4%B8%8B/</link><pubDate>Tue, 24 Dec 2019 14:40:22 +0800</pubDate><guid>https://www.dianbanjiu.com/post/android-%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E5%88%B0-linux-%E4%B8%8B/</guid><description>最近发现了一个可以在 Linux 下使用的手机投屏软件软件 —— scrcpy，同时也支持 Windows 和 MacOS，但是因为我用的是 Manjaro Linux，所以下面只会介绍 Manjaro 下</description></item><item><title>Hugo 创建多级菜单</title><link>https://www.dianbanjiu.com/post/hugo-%E5%88%9B%E5%BB%BA%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95/</link><pubDate>Sat, 21 Dec 2019 15:05:02 +0800</pubDate><guid>https://www.dianbanjiu.com/post/hugo-%E5%88%9B%E5%BB%BA%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95/</guid><description>hugo 的多级多级菜单相较于单级菜单，仅仅是多了一个 parent 参数。 下面是一个单级菜单的样式配置： 注：我使用的是 toml 格式的配置文件，其他类型的根据自己需求修</description></item></channel></rss>